import cv2
import numpy as np
import HandTrackingModule as htm
import math
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume

######################
wCam, hCam = 640, 480

######################



devices = AudioUtilities.GetSpeakers()
interface = devices.Activate(
    IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
volume = cast(interface, POINTER(IAudioEndpointVolume))
# volume.GetMute()
# volume.GetMasterVolumeLevel()
volRange = volume.GetVolumeRange()

minVol = volRange[0]
maxVol = volRange[1]


cap = cv2.VideoCapture(0)
cap.set(3, wCam)
cap.set(4, hCam)

detector = htm.handDetector(detectionCon=0.7)
vol = 0
volBar = 400
volPer = 0


while True:
    success, img = cap.read()

    img = detector.findHands(img)
    lmList = detector.findPosition(img, draw=False)
    if len(lmList)!=0:
        x1, y1 = lmList[4][1], lmList[4][2]
        x2, y2 = lmList[8][1], lmList[8][2]
        cx, cy = int((x1+x2)/2), int((y1+y2)/2)

        cv2.circle(img, (x1,y1), 5, (255, 0, 233), cv2.FILLED)
        cv2.circle(img, (x2, y2), 5, (255, 0, 233), cv2.FILLED)
        cv2.circle(img, (cx, cy), 5, (255, 0, 233), cv2.FILLED)
        cv2.line(img, (x1,y1),(x2,y2), (255, 0,255), 3)

        length = math.hypot(x2-x1, y2-y1)

        #handRange 35-150
        #volume range -65-0

        vol = np.interp(length, [25,150], [minVol, maxVol])
        volBar = np.interp(length, [25, 150], [400, 150])
        volPer = np.interp(length, [25, 150], [0,100])
        print(vol)
        volume.SetMasterVolumeLevel(vol, None)


        if length<25:
            cv2.circle(img, (cx, cy), 5, (0, 255, 233), cv2.FILLED)

    cv2.rectangle(img, (50,150), (85, 400), (0,255,0), 2)
    cv2.rectangle(img, (50, int(volBar)), (85, 400), (0, 255, 0), cv2.FILLED)
    cv2.putText(img, str(int(volPer))+"%", (50, 140), cv2.FONT_HERSHEY_SIMPLEX, 0.7, (0,0,0), 3)


    cv2.imshow("img", img)
    cv2.waitKey(1)
